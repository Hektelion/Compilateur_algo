Terminaux inutilisés dans la grammaire

    TOK_FLOAT
    TOK_CHAR
    TOK_BOOL
    TOK_QUOTE


État 13 conflits: 1 décalage/réduction
État 17 conflits: 1 réduction/réduction


Grammaire

    0 $accept: algorithme $end

    1 algorithme: algo_definition algo_role declaration debut programme fin

    2 algo_definition: TOK_ALGO TOK_ALGO_NAME
    3                | TOK_ALGO
    4                | %empty

    5 algo_role: TOK_ROLE TOK_COMMA TOK_ROLE_DESC
    6          | TOK_ROLE TOK_COMMA
    7          | TOK_ROLE TOK_ROLE_DESC
    8          | TOK_ROLE
    9          | %empty

   10 declaration: TOK_DECLARE declaration
   11            | declaration declaration_variable
   12            | %empty

   13 declaration_variable: TOK_ID TOK_COMMA TOK_TYPE
   14                     | TOK_ID TOK_COLON declaration_variable

   15 debut: TOK_BEGIN

   16 fin: TOK_END

   17 programme: bloc_instruction
   18          | %empty

   19 bloc_instruction: instruction bloc_instruction
   20                 | structure_conditionnelle bloc_instruction
   21                 | structure_iterative bloc_instruction
   22                 | %empty

   23 instruction: TOK_ID TOK_PARL arguments TOK_PARR
   24            | TOK_ID TOK_EQUAL expression

   25 expression: operande
   26           | operande TOK_OP expression
   27           | TOK_PARL expression TOK_PARR

   28 arguments: argument TOK_COMMA arguments
   29          | argument

   30 argument: TOK_STRING
   31         | TOK_ID

   32 operande: TOK_ID
   33         | TOK_INT

   34 structure_conditionnelle: TOK_IF expression TOK_THEN bloc_instruction TOK_EIF
   35                         | TOK_IF expression TOK_THEN bloc_instruction TOK_ELSE bloc_instruction TOK_EIF

   36 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_DO bloc_instruction TOK_EFOR
   37                    | TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_BY_STEP operande TOK_DO bloc_instruction TOK_EFOR
   38                    | TOK_WHILE expression TOK_DO bloc_instruction TOK_EWHILE


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    error (256)
    TOK_ALGO (258) 2 3
    TOK_ALGO_NAME (259) 2
    TOK_ROLE (260) 5 6 7 8
    TOK_ROLE_DESC (261) 5 7
    TOK_DECLARE (262) 10
    TOK_BEGIN (263) 15
    TOK_END (264) 16
    TOK_TYPE (265) 13
    TOK_IF (266) 34 35
    TOK_ELSE (267) 35
    TOK_THEN (268) 34 35
    TOK_EIF (269) 34 35
    TOK_FOR (270) 36 37
    TOK_FROM (271) 36 37
    TOK_TO (272) 36 37
    TOK_BY_STEP (273) 37
    TOK_DO (274) 36 37 38
    TOK_EFOR (275) 36 37
    TOK_WHILE (276) 38
    TOK_EWHILE (277) 38
    TOK_INT <nombre> (278) 33
    TOK_FLOAT (279)
    TOK_CHAR (280)
    TOK_BOOL (281)
    TOK_STRING (282) 30
    TOK_OP <chaine> (283) 26
    TOK_EQUAL (284) 24
    TOK_PARL (285) 23 27
    TOK_PARR (286) 23 27
    TOK_COLON (287) 14
    TOK_COMMA (288) 5 6 13 28
    TOK_QUOTE (289)
    TOK_ID <chaine> (290) 13 14 23 24 31 32 36 37


Non-terminaux, suivis des règles où ils apparaissent

    $accept (36)
        à gauche: 0
    algorithme <chaine> (37)
        à gauche: 1
        à droite: 0
    algo_definition <chaine> (38)
        à gauche: 2 3 4
        à droite: 1
    algo_role <chaine> (39)
        à gauche: 5 6 7 8 9
        à droite: 1
    declaration <chaine> (40)
        à gauche: 10 11 12
        à droite: 1 10 11
    declaration_variable <chaine> (41)
        à gauche: 13 14
        à droite: 11 14
    debut (42)
        à gauche: 15
        à droite: 1
    fin (43)
        à gauche: 16
        à droite: 1
    programme (44)
        à gauche: 17 18
        à droite: 1
    bloc_instruction <chaine> (45)
        à gauche: 19 20 21 22
        à droite: 17 19 20 21 34 35 36 37 38
    instruction <chaine> (46)
        à gauche: 23 24
        à droite: 19
    expression <chaine> (47)
        à gauche: 25 26 27
        à droite: 24 26 27 34 35 38
    arguments <chaine> (48)
        à gauche: 28 29
        à droite: 23 28
    argument <chaine> (49)
        à gauche: 30 31
        à droite: 28 29
    operande <chaine> (50)
        à gauche: 32 33
        à droite: 25 26 36 37
    structure_conditionnelle <chaine> (51)
        à gauche: 34 35
        à droite: 20
    structure_iterative <chaine> (52)
        à gauche: 36 37 38
        à droite: 21


État 0

    0 $accept: . algorithme $end

    TOK_ALGO  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 4 (algo_definition)

    algorithme       aller à l'état 2
    algo_definition  aller à l'état 3


État 1

    2 algo_definition: TOK_ALGO . TOK_ALGO_NAME
    3                | TOK_ALGO .

    TOK_ALGO_NAME  décalage et aller à l'état 4

    $défaut  réduction par utilisation de la règle 3 (algo_definition)


État 2

    0 $accept: algorithme . $end

    $end  décalage et aller à l'état 5


État 3

    1 algorithme: algo_definition . algo_role declaration debut programme fin

    TOK_ROLE  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 9 (algo_role)

    algo_role  aller à l'état 7


État 4

    2 algo_definition: TOK_ALGO TOK_ALGO_NAME .

    $défaut  réduction par utilisation de la règle 2 (algo_definition)


État 5

    0 $accept: algorithme $end .

    $défaut  accepter


État 6

    5 algo_role: TOK_ROLE . TOK_COMMA TOK_ROLE_DESC
    6          | TOK_ROLE . TOK_COMMA
    7          | TOK_ROLE . TOK_ROLE_DESC
    8          | TOK_ROLE .

    TOK_ROLE_DESC  décalage et aller à l'état 8
    TOK_COMMA      décalage et aller à l'état 9

    $défaut  réduction par utilisation de la règle 8 (algo_role)


État 7

    1 algorithme: algo_definition algo_role . declaration debut programme fin

    TOK_DECLARE  décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 12 (declaration)

    declaration  aller à l'état 11


État 8

    7 algo_role: TOK_ROLE TOK_ROLE_DESC .

    $défaut  réduction par utilisation de la règle 7 (algo_role)


État 9

    5 algo_role: TOK_ROLE TOK_COMMA . TOK_ROLE_DESC
    6          | TOK_ROLE TOK_COMMA .

    TOK_ROLE_DESC  décalage et aller à l'état 12

    $défaut  réduction par utilisation de la règle 6 (algo_role)


État 10

   10 declaration: TOK_DECLARE . declaration

    TOK_DECLARE  décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 12 (declaration)

    declaration  aller à l'état 13


État 11

    1 algorithme: algo_definition algo_role declaration . debut programme fin
   11 declaration: declaration . declaration_variable

    TOK_BEGIN  décalage et aller à l'état 14
    TOK_ID     décalage et aller à l'état 15

    declaration_variable  aller à l'état 16
    debut                 aller à l'état 17


État 12

    5 algo_role: TOK_ROLE TOK_COMMA TOK_ROLE_DESC .

    $défaut  réduction par utilisation de la règle 5 (algo_role)


État 13

   10 declaration: TOK_DECLARE declaration .
   11            | declaration . declaration_variable

    TOK_ID  décalage et aller à l'état 15

    TOK_ID    [réduction par utilisation de la règle 10 (declaration)]
    $défaut  réduction par utilisation de la règle 10 (declaration)

    declaration_variable  aller à l'état 16


État 14

   15 debut: TOK_BEGIN .

    $défaut  réduction par utilisation de la règle 15 (debut)


État 15

   13 declaration_variable: TOK_ID . TOK_COMMA TOK_TYPE
   14                     | TOK_ID . TOK_COLON declaration_variable

    TOK_COLON  décalage et aller à l'état 18
    TOK_COMMA  décalage et aller à l'état 19


État 16

   11 declaration: declaration declaration_variable .

    $défaut  réduction par utilisation de la règle 11 (declaration)


État 17

    1 algorithme: algo_definition algo_role declaration debut . programme fin

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    TOK_END   réduction par utilisation de la règle 18 (programme)
    TOK_END   [réduction par utilisation de la règle 22 (bloc_instruction)]
    $défaut  réduction par utilisation de la règle 18 (programme)

    programme                 aller à l'état 24
    bloc_instruction          aller à l'état 25
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 18

   14 declaration_variable: TOK_ID TOK_COLON . declaration_variable

    TOK_ID  décalage et aller à l'état 15

    declaration_variable  aller à l'état 29


État 19

   13 declaration_variable: TOK_ID TOK_COMMA . TOK_TYPE

    TOK_TYPE  décalage et aller à l'état 30


État 20

   34 structure_conditionnelle: TOK_IF . expression TOK_THEN bloc_instruction TOK_EIF
   35                         | TOK_IF . expression TOK_THEN bloc_instruction TOK_ELSE bloc_instruction TOK_EIF

    TOK_INT   décalage et aller à l'état 31
    TOK_PARL  décalage et aller à l'état 32
    TOK_ID    décalage et aller à l'état 33

    expression  aller à l'état 34
    operande    aller à l'état 35


État 21

   36 structure_iterative: TOK_FOR . TOK_ID TOK_FROM operande TOK_TO operande TOK_DO bloc_instruction TOK_EFOR
   37                    | TOK_FOR . TOK_ID TOK_FROM operande TOK_TO operande TOK_BY_STEP operande TOK_DO bloc_instruction TOK_EFOR

    TOK_ID  décalage et aller à l'état 36


État 22

   38 structure_iterative: TOK_WHILE . expression TOK_DO bloc_instruction TOK_EWHILE

    TOK_INT   décalage et aller à l'état 31
    TOK_PARL  décalage et aller à l'état 32
    TOK_ID    décalage et aller à l'état 33

    expression  aller à l'état 37
    operande    aller à l'état 35


État 23

   23 instruction: TOK_ID . TOK_PARL arguments TOK_PARR
   24            | TOK_ID . TOK_EQUAL expression

    TOK_EQUAL  décalage et aller à l'état 38
    TOK_PARL   décalage et aller à l'état 39


État 24

    1 algorithme: algo_definition algo_role declaration debut programme . fin

    TOK_END  décalage et aller à l'état 40

    fin  aller à l'état 41


État 25

   17 programme: bloc_instruction .

    $défaut  réduction par utilisation de la règle 17 (programme)


État 26

   19 bloc_instruction: instruction . bloc_instruction

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 22 (bloc_instruction)

    bloc_instruction          aller à l'état 42
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 27

   20 bloc_instruction: structure_conditionnelle . bloc_instruction

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 22 (bloc_instruction)

    bloc_instruction          aller à l'état 43
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 28

   21 bloc_instruction: structure_iterative . bloc_instruction

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 22 (bloc_instruction)

    bloc_instruction          aller à l'état 44
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 29

   14 declaration_variable: TOK_ID TOK_COLON declaration_variable .

    $défaut  réduction par utilisation de la règle 14 (declaration_variable)


État 30

   13 declaration_variable: TOK_ID TOK_COMMA TOK_TYPE .

    $défaut  réduction par utilisation de la règle 13 (declaration_variable)


État 31

   33 operande: TOK_INT .

    $défaut  réduction par utilisation de la règle 33 (operande)


État 32

   27 expression: TOK_PARL . expression TOK_PARR

    TOK_INT   décalage et aller à l'état 31
    TOK_PARL  décalage et aller à l'état 32
    TOK_ID    décalage et aller à l'état 33

    expression  aller à l'état 45
    operande    aller à l'état 35


État 33

   32 operande: TOK_ID .

    $défaut  réduction par utilisation de la règle 32 (operande)


État 34

   34 structure_conditionnelle: TOK_IF expression . TOK_THEN bloc_instruction TOK_EIF
   35                         | TOK_IF expression . TOK_THEN bloc_instruction TOK_ELSE bloc_instruction TOK_EIF

    TOK_THEN  décalage et aller à l'état 46


État 35

   25 expression: operande .
   26           | operande . TOK_OP expression

    TOK_OP  décalage et aller à l'état 47

    $défaut  réduction par utilisation de la règle 25 (expression)


État 36

   36 structure_iterative: TOK_FOR TOK_ID . TOK_FROM operande TOK_TO operande TOK_DO bloc_instruction TOK_EFOR
   37                    | TOK_FOR TOK_ID . TOK_FROM operande TOK_TO operande TOK_BY_STEP operande TOK_DO bloc_instruction TOK_EFOR

    TOK_FROM  décalage et aller à l'état 48


État 37

   38 structure_iterative: TOK_WHILE expression . TOK_DO bloc_instruction TOK_EWHILE

    TOK_DO  décalage et aller à l'état 49


État 38

   24 instruction: TOK_ID TOK_EQUAL . expression

    TOK_INT   décalage et aller à l'état 31
    TOK_PARL  décalage et aller à l'état 32
    TOK_ID    décalage et aller à l'état 33

    expression  aller à l'état 50
    operande    aller à l'état 35


État 39

   23 instruction: TOK_ID TOK_PARL . arguments TOK_PARR

    TOK_STRING  décalage et aller à l'état 51
    TOK_ID      décalage et aller à l'état 52

    arguments  aller à l'état 53
    argument   aller à l'état 54


État 40

   16 fin: TOK_END .

    $défaut  réduction par utilisation de la règle 16 (fin)


État 41

    1 algorithme: algo_definition algo_role declaration debut programme fin .

    $défaut  réduction par utilisation de la règle 1 (algorithme)


État 42

   19 bloc_instruction: instruction bloc_instruction .

    $défaut  réduction par utilisation de la règle 19 (bloc_instruction)


État 43

   20 bloc_instruction: structure_conditionnelle bloc_instruction .

    $défaut  réduction par utilisation de la règle 20 (bloc_instruction)


État 44

   21 bloc_instruction: structure_iterative bloc_instruction .

    $défaut  réduction par utilisation de la règle 21 (bloc_instruction)


État 45

   27 expression: TOK_PARL expression . TOK_PARR

    TOK_PARR  décalage et aller à l'état 55


État 46

   34 structure_conditionnelle: TOK_IF expression TOK_THEN . bloc_instruction TOK_EIF
   35                         | TOK_IF expression TOK_THEN . bloc_instruction TOK_ELSE bloc_instruction TOK_EIF

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 22 (bloc_instruction)

    bloc_instruction          aller à l'état 56
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 47

   26 expression: operande TOK_OP . expression

    TOK_INT   décalage et aller à l'état 31
    TOK_PARL  décalage et aller à l'état 32
    TOK_ID    décalage et aller à l'état 33

    expression  aller à l'état 57
    operande    aller à l'état 35


État 48

   36 structure_iterative: TOK_FOR TOK_ID TOK_FROM . operande TOK_TO operande TOK_DO bloc_instruction TOK_EFOR
   37                    | TOK_FOR TOK_ID TOK_FROM . operande TOK_TO operande TOK_BY_STEP operande TOK_DO bloc_instruction TOK_EFOR

    TOK_INT  décalage et aller à l'état 31
    TOK_ID   décalage et aller à l'état 33

    operande  aller à l'état 58


État 49

   38 structure_iterative: TOK_WHILE expression TOK_DO . bloc_instruction TOK_EWHILE

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 22 (bloc_instruction)

    bloc_instruction          aller à l'état 59
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 50

   24 instruction: TOK_ID TOK_EQUAL expression .

    $défaut  réduction par utilisation de la règle 24 (instruction)


État 51

   30 argument: TOK_STRING .

    $défaut  réduction par utilisation de la règle 30 (argument)


État 52

   31 argument: TOK_ID .

    $défaut  réduction par utilisation de la règle 31 (argument)


État 53

   23 instruction: TOK_ID TOK_PARL arguments . TOK_PARR

    TOK_PARR  décalage et aller à l'état 60


État 54

   28 arguments: argument . TOK_COMMA arguments
   29          | argument .

    TOK_COMMA  décalage et aller à l'état 61

    $défaut  réduction par utilisation de la règle 29 (arguments)


État 55

   27 expression: TOK_PARL expression TOK_PARR .

    $défaut  réduction par utilisation de la règle 27 (expression)


État 56

   34 structure_conditionnelle: TOK_IF expression TOK_THEN bloc_instruction . TOK_EIF
   35                         | TOK_IF expression TOK_THEN bloc_instruction . TOK_ELSE bloc_instruction TOK_EIF

    TOK_ELSE  décalage et aller à l'état 62
    TOK_EIF   décalage et aller à l'état 63


État 57

   26 expression: operande TOK_OP expression .

    $défaut  réduction par utilisation de la règle 26 (expression)


État 58

   36 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande . TOK_TO operande TOK_DO bloc_instruction TOK_EFOR
   37                    | TOK_FOR TOK_ID TOK_FROM operande . TOK_TO operande TOK_BY_STEP operande TOK_DO bloc_instruction TOK_EFOR

    TOK_TO  décalage et aller à l'état 64


État 59

   38 structure_iterative: TOK_WHILE expression TOK_DO bloc_instruction . TOK_EWHILE

    TOK_EWHILE  décalage et aller à l'état 65


État 60

   23 instruction: TOK_ID TOK_PARL arguments TOK_PARR .

    $défaut  réduction par utilisation de la règle 23 (instruction)


État 61

   28 arguments: argument TOK_COMMA . arguments

    TOK_STRING  décalage et aller à l'état 51
    TOK_ID      décalage et aller à l'état 52

    arguments  aller à l'état 66
    argument   aller à l'état 54


État 62

   35 structure_conditionnelle: TOK_IF expression TOK_THEN bloc_instruction TOK_ELSE . bloc_instruction TOK_EIF

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 22 (bloc_instruction)

    bloc_instruction          aller à l'état 67
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 63

   34 structure_conditionnelle: TOK_IF expression TOK_THEN bloc_instruction TOK_EIF .

    $défaut  réduction par utilisation de la règle 34 (structure_conditionnelle)


État 64

   36 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO . operande TOK_DO bloc_instruction TOK_EFOR
   37                    | TOK_FOR TOK_ID TOK_FROM operande TOK_TO . operande TOK_BY_STEP operande TOK_DO bloc_instruction TOK_EFOR

    TOK_INT  décalage et aller à l'état 31
    TOK_ID   décalage et aller à l'état 33

    operande  aller à l'état 68


État 65

   38 structure_iterative: TOK_WHILE expression TOK_DO bloc_instruction TOK_EWHILE .

    $défaut  réduction par utilisation de la règle 38 (structure_iterative)


État 66

   28 arguments: argument TOK_COMMA arguments .

    $défaut  réduction par utilisation de la règle 28 (arguments)


État 67

   35 structure_conditionnelle: TOK_IF expression TOK_THEN bloc_instruction TOK_ELSE bloc_instruction . TOK_EIF

    TOK_EIF  décalage et aller à l'état 69


État 68

   36 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande . TOK_DO bloc_instruction TOK_EFOR
   37                    | TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande . TOK_BY_STEP operande TOK_DO bloc_instruction TOK_EFOR

    TOK_BY_STEP  décalage et aller à l'état 70
    TOK_DO       décalage et aller à l'état 71


État 69

   35 structure_conditionnelle: TOK_IF expression TOK_THEN bloc_instruction TOK_ELSE bloc_instruction TOK_EIF .

    $défaut  réduction par utilisation de la règle 35 (structure_conditionnelle)


État 70

   37 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_BY_STEP . operande TOK_DO bloc_instruction TOK_EFOR

    TOK_INT  décalage et aller à l'état 31
    TOK_ID   décalage et aller à l'état 33

    operande  aller à l'état 72


État 71

   36 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_DO . bloc_instruction TOK_EFOR

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 22 (bloc_instruction)

    bloc_instruction          aller à l'état 73
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 72

   37 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_BY_STEP operande . TOK_DO bloc_instruction TOK_EFOR

    TOK_DO  décalage et aller à l'état 74


État 73

   36 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_DO bloc_instruction . TOK_EFOR

    TOK_EFOR  décalage et aller à l'état 75


État 74

   37 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_BY_STEP operande TOK_DO . bloc_instruction TOK_EFOR

    TOK_IF     décalage et aller à l'état 20
    TOK_FOR    décalage et aller à l'état 21
    TOK_WHILE  décalage et aller à l'état 22
    TOK_ID     décalage et aller à l'état 23

    $défaut  réduction par utilisation de la règle 22 (bloc_instruction)

    bloc_instruction          aller à l'état 76
    instruction               aller à l'état 26
    structure_conditionnelle  aller à l'état 27
    structure_iterative       aller à l'état 28


État 75

   36 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_DO bloc_instruction TOK_EFOR .

    $défaut  réduction par utilisation de la règle 36 (structure_iterative)


État 76

   37 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_BY_STEP operande TOK_DO bloc_instruction . TOK_EFOR

    TOK_EFOR  décalage et aller à l'état 77


État 77

   37 structure_iterative: TOK_FOR TOK_ID TOK_FROM operande TOK_TO operande TOK_BY_STEP operande TOK_DO bloc_instruction TOK_EFOR .

    $défaut  réduction par utilisation de la règle 37 (structure_iterative)
